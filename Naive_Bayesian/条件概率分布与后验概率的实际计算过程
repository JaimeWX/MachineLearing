'''
算法总结
    类条件概率分布的极大似然估计的实际计算过程：
        input:
            trainMatrix
                [[0 0 0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 1 0 0 0 1 0 1 0 0 0 0 1 1 0]
                 [1 0 0 0 1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 1 0 1 1 1 0 1 0 0 0 0 0 0]
                 [1 0 0 1 0 0 0 1 0 0 1 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 1 0 1 1 0 0]
                 [0 1 1 0 0 0 0 0 0 0 0 0 0 1 1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0]
                 [1 0 0 0 0 1 0 0 0 0 0 1 0 1 0 1 0 0 0 0 0 0 0 1 0 0 0 1 0 1 0 1]
                 [0 1 0 0 0 0 0 0 1 0 0 0 0 0 0 0 1 1 0 1 0 0 1 0 0 0 0 0 0 0 0 0]]
            trainCategory
                [0 1 0 1 0 1]
        求P(X=x|Y=1)
            step1 创建 p1Num : [1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1.]
                  此处使用了拉普拉斯平滑，lambda = 1
            step2 找出所有类别标签为1的样例：
                [1 0 0 0 1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 1 0 1 1 1 0 1 0 0 0 0 0 0]
                [0 1 1 0 0 0 0 0 0 0 0 0 0 1 1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0]
                [0 1 0 0 0 0 0 0 1 0 0 0 0 0 0 0 1 1 0 1 0 0 1 0 0 0 0 0 0 0 0 0]
            step3 p1Num =+ trainMatrix[i]: i = 1,2,3
                [2. 3. 2. 1. 2. 1. 1. 1. 2. 2. 1. 1. 1. 2. 2. 1. 2. 2. 1. 4. 1. 2. 3. 2. 1. 2. 1. 1. 1. 1. 1. 1.]
            step4 p1Denom = 2 + 19 =21
                2 = Sj*lambda (拉普拉斯平滑的体现)
                19 是step2中所有1的总和
            step5 p1Vect = log(p1Num/p1Denom)
                [-2.35137526 -1.94591015 -2.35137526 -3.04452244 -2.35137526 -3.04452244
                 -3.04452244 -3.04452244 -2.35137526 -2.35137526 -3.04452244 -3.04452244
                 -3.04452244 -2.35137526 -2.35137526 -3.04452244 -2.35137526 -2.35137526
                 -3.04452244 -1.65822808 -3.04452244 -2.35137526 -1.94591015 -2.35137526
                 -3.04452244 -2.35137526 -3.04452244 -3.04452244 -3.04452244 -3.04452244
                 -3.04452244 -3.04452244]
    类后验概率的实际计算过程
        input: 测试样例 vec2Classify = ['love', 'my', 'dalmation'] => [0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 0]

        求测试样例属于1类的后验概率p1
            step1 vec2Classify * p1Vect
                [-0.         -0.         -0.         -3.04452244 -0.         -0.
                 -0.         -0.         -0.         -0.         -0.         -0.
                 -0.         -0.         -0.         -0.         -0.         -0.
                 -0.         -0.         -0.         -0.         -0.         -0.
                 -0.         -0.         -0.         -0.         -3.04452244 -3.04452244
                 -0.         -0.        ]
             step2 sum(vec2Classify * p1Vect)
                    -9.13356731317027
            step3 p1 = sum(vec2Classify * p1Vec) + log(pClass1) # pClass1 为类1的先验概率分布(0.5)
'''